@import './variable';




.inner {
  width: 100%;
  max-width: $maxWidth;
  margin: 0 auto;
  padding: 0 10px;
}

.flex {
  display: flex;
  justify-content: space-between;
  align-items: center;
}


.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 1000px;
  margin: 0 auto;
  padding: 10px 0;

  h1 {
    text-align: left;
  }

  &__logo {
    width: 80px;
  }

  &__list {
    display: flex;

    & > li {
      margin-left: 30px;

      /* 擬似クラスもこのように書く事が可能 */
      &:first-child {
        margin-left: 0;
      }
    }
  }
  &__link {
    text-decoration: none;
    color: #666;
    font: {
      size: 16px;
      weight: bold;
    }

    &:hover {
      color: $brandColor;
    }
  }
}

.parent {
  padding: 70px 0;
  background-color: #fff;

  &__ttl {
    color: #333;
    text-align: center;
    font: {
      size: 20px;
      weight: bold;
    }
  }
}

.children {
  &__ttl {
    @extend .parent__ttl;
    background-color: #f5f5f5;
  }
}

.footer {
  $map:($sns);
  @debug $map;
  @mixin btn($color) {
    display: block;
    padding: 20px 30px;
    color: #fff;
    border-radius: 6px;
    cursor: pointer;
    background-color: $color;
    text: {
      decoration: none;
      align: center;
    }
  }
  padding: 70px 0;

  &__sns {
    &__list {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;

      & > li {
        width: 32%;

        &:nth-child(n+4) {
          margin-top: 20px;
        }
      }
    }
    &__btn {
      @each $class, $colors in $map {
        &.is-#{$class} {
          $color: map-get($map, $class);
          @include btn($color);
        }
      }
    }
  }
}





